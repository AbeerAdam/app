from tkinter import *
import tkinter as tk
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designe

#import PyArabic *
import pandas as pd
import nltk
import os
import simpleaudio as sa
from playsound import playsound
import speech_recognition as sr
from pathlib import Path
import MySQLdb as mdb
import pandas as pd
import nltk.tokenize as nt
import re
nltk.download('punkt')

DBNAME = "sql9593213"
DBHOST = "sql9.freemysqlhosting.net"
DBPASS = "8LkKvP548C"
DBUSER = "sql9593213"

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\ab00e\Desktop\tkprojict\build\assets\frame10")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


class App(tk.Tk):
    def __init__(self, *args, **kwargs):
        tk.Tk.__init__(self,  *args, **kwargs)
        self.title("الراوي")
        self.geometry("360x800")

        container = tk.Canvas(self,  width=360, height=800)
        container.pack(fill="both", expand=True)

        container.grid_rowconfigure(0, weight=1)
        container.grid_columnconfigure(0, weight=1)

        self.frames = {}

        for F in (start_Page, start_log_in, start_register, home_Page, search_word, record_Result, profile, my_Favurit_List):
            frame = F(container, self)
            self.frames[F] = frame
            frame.tkraise()
            label = Label()
            frame.grid(row=0, column=0, sticky="nsew")

        self.show_frame(start_Page)

    def show_frame(self, cont):
        frame = self.frames[cont]
        frame.tkraise()

        #self.iconbitmap("logo.ico")
    def log_in(self):
         print("This is Log inn Page")


    def register(self):
         print("This is Rgistration Pge")



class start_Page(tk.Frame):
    def __init__(self, parent, controller):
        Frame.__init__(self,parent)
        self.canvas = Canvas(self, bg="#227A70", height=800, width=360, bd=0, highlightthickness=0, relief="ridge")
        self.canvas.place(x=0, y=0, height=800, width=360)
        self.image_image_1 = PhotoImage(file=relative_to_assets("background.png"))
        self.canvas.create_image(180.0, 400.0, image=self.image_image_1)
        self.button_image_1 = PhotoImage(file=relative_to_assets("log_in.png"))
        button_1 = Button(self, image=self.button_image_1, text="تسجيل الدخول", borderwidth=-1, highlightthickness=0,
                               bg="#71AFA9", command=lambda: controller.show_frame(start_log_in), relief="flat")
        button_1.place(x=76.0, y=528.0, width=208.0, height=48.0)
        self.button_image_2 = PhotoImage(file=relative_to_assets("register.png"))
        button_2 = Button(self, image=self.button_image_2, text="إنشاء حساب", bg="#76B1A9", borderwidth=-1,
                               highlightthickness=0, command=lambda: controller.show_frame(start_register), relief="flat")
        button_2.place(x=76.0, y=582.0, width=208.0, height=47.0)
        self.image_image_2 = PhotoImage(file=relative_to_assets("logo.png"))
        self.image_2 = self.canvas.create_image(180.0, 286.0, image=self.image_image_2)
        self.image_image_3 = PhotoImage(file=relative_to_assets("language.png"))
        self.image_3 = self.canvas.create_image(328.0, 37.0, image=self.image_image_3)


class  start_register(Frame):
    def __init__(self, parent, controller):
        Frame.__init__(self,parent)
        self.canvas = Canvas(self, bg="#FFFFFF", height=800, width=360, bd=0, highlightthickness=0,relief="ridge")
        self.canvas.place(x=0, y=0)
        self.image_image_1 = PhotoImage(file=relative_to_assets("background.png"))
        self.image_1 = self.canvas.create_image(180.0, 400.0, image=self.image_image_1)
        self.image_image_2 = PhotoImage(file=relative_to_assets("logo.png"))
        self.image_2 = self.canvas.create_image(180.0,286.0,image=self.image_image_2)
        self.image_image_3 = PhotoImage(file=relative_to_assets("white_back.png"))
        self.image_3 = self.canvas.create_image(181.0, 410.0, image=self.image_image_3)
        self.entry_image_1 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_1 = self.canvas.create_image(188.5, 670.5, image=self.entry_image_1)
        entry_1_age = Entry(self, bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
        entry_1_age.place(x=61.0, y=652.0, width=255.0, height=35.0)
        self.entry_image_2 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_2 = self.canvas.create_image(188.5, 595.5, image=self.entry_image_2)
        entry_2_spicialist = Entry(self, bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
        entry_2_spicialist.place(x=61.0, y=577.0, width=255.0, height=35.0)
        self.canvas.create_text(277.0, 621.0, anchor="nw", text="العمر", fill="#05646D", font=("Rakkas", 20 * -1))
        self.canvas.create_text(270.0, 546.0, anchor="nw",  text="التخصص", fill="#05646D", font=("Rakkas", 20 * -1))
        self.entry_image_3 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_3 = self.canvas.create_image( 188.5, 520.5, image=self.entry_image_3)
        entry_3_occupation = Entry(self,  bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
        entry_3_occupation.place(x=61.0, y=502.0, width=255.0, height=35.0)
        self.entry_image_4 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_4 = self.canvas.create_image(188.5, 445.5, image=self.entry_image_4)
        entry_4_phone = Entry(self, bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
        entry_4_phone.place(x=61.0, y=427.0, width=255.0, height=35.0)
        self.canvas.create_text( 266.0, 471.0, anchor="nw" , text="الوظيفة", fill="#05646D", font=("Rakkas", 20 * -1))
        self.canvas.create_text(260.0, 395.0, anchor="nw",text="رقم الجوال", fill="#05646D", font=("Rakkas", 20 * -1))
        self.canvas.create_text(120.0, 110.0, anchor="nw", text="إنشاء حساب ", fill="#05646D", font=("Rakkas", 32 * -1))
        self.entry_image_7 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_7 = self.canvas.create_image(188.5, 292.5, image=self.entry_image_7)
        entry_7_name = Entry(self, bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
        entry_7_name.place(x=61.0, y=200.0, width=255.0, height=35.0)
        self.canvas.create_text(240.0, 165.0, anchor="nw", text="اسم المستخدم", fill="#05646D", font=("Rakkas", 20 * -1))
        self.entry_image_5 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_5 = self.canvas.create_image(188.5, 292.5, image=self.entry_image_5)
        entry_5_Password = Entry(self, bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
        entry_5_Password.place(x=61.0, y=274.0, width=255.0, height=35.0)
        self.canvas.create_text(246.0, 242.0, anchor="nw", text="كلمة المرور", fill="#05646D", font=("Rakkas", 20 * -1))

        self.entry_image_6 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_6 = self.canvas.create_image(188.5, 368.5, image=self.entry_image_6)
        entry_6_Email = Entry(self, bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
        entry_6_Email.place(x=61.0, y=350.0, width=255.0, height=35.0)

        age = entry_1_age.get()
        speciality = entry_2_spicialist.get()
        occupation = entry_3_occupation.get()
        phoneNumber = entry_4_phone.get()
        password = entry_5_Password.get()
        email = entry_6_Email.get()
        userName = entry_7_name.get()

        self.canvas.create_text(206.0, 319.0, anchor="nw", text="البريد الالكتروني", fill="#05646D", font=("Rakkas", 20 * -1))
        self.button_image_1 = PhotoImage(file=relative_to_assets("register_butt.png"))
        button_1 = Button(self, image=self.button_image_1, bg="#F3FEFC",borderwidth=0,  highlightthickness=0, command=lambda:save_info(), relief="flat")
        button_1.place(x=120.0, y=704.0, width=129.0, height=47.0)
        self.image_image_4 = PhotoImage(file=relative_to_assets("back_arrow.png"))
        image_4 = Button(self, image=self.image_image_4, borderwidth=0,  highlightthickness=0,bg="#49A0A2" ,command=lambda: controller.show_frame(start_Page), relief="flat")
        image_4.place(x = 20.0,y = 15.0)

        def save_info():
                db = mdb.connect(DBHOST, DBUSER, DBPASS, DBNAME)
                cur = db.cursor()
                print("Connected")

                insert = "INSERT INTO userInfo (userName , password , email , phoneNumber , occupation , speciality , age) VALUES (%s , %s , %s)"
                values = (userName, password, email, phoneNumber, occupation, speciality, age)

                try:
                    cur.execute(insert, values)
                    db.commit()
                    print(userName, password, email, phoneNumber, occupation, speciality, age)
                    controller.show_frame(home_Page)
                except Exception as e:
                    print("Was a error" + e)

                    db.close()


class start_log_in(Frame):
    def __init__(self, parent, controller):
        Frame.__init__(self,parent)
        self.canvas = Canvas(self, bg="#FFFFFF", height=800, width=360, bd=0, highlightthickness=0, relief="ridge")
        self.canvas.place(x=0, y=0)
        self.image_image_1 = PhotoImage(file=relative_to_assets("background.png"))
        self.image_1 =self.canvas.create_image(180.0, 400.0, image=self.image_image_1)
        self.image_image_2 = PhotoImage(file=relative_to_assets("white_back.png"))
        self.image_2 = self.canvas.create_image(181.0, 426.0, image=self.image_image_2)
        self.image_image_3 = PhotoImage(file=relative_to_assets("back_arrow.png"))
        button =  Button(self, image=self.image_image_3, borderwidth=0,  highlightthickness=0,bg="#49A0A2" ,command=lambda: controller.show_frame(start_Page), relief="flat")
        button.place(x = 20.0,y = 15.0)
        self.canvas.create_text(115.0, 688.0, anchor="nw", text=" نسيت كلمة المرور؟", fill="#545454", font=("Rakkas", 20 * -1))
        self.canvas.create_text(118.0, 120.0, anchor="nw", text="تسجيل دخول", fill="#05646D", font=("Rakkas", 32 * -1))
        self.canvas.create_text(218.0, 196.0, anchor="nw", text="اسم المستخدم", fill="#05646D", font=("Rakkas", 20 * -1))
        self.entry_image_1 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_1 =self.canvas.create_image(180.5, 245.5, image=self.entry_image_1)
        entry_1 = Entry(self, bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
        entry_1.place(x=53.0, y=227.0, width=255.0, height=35.0)
        self.canvas.create_text(230.0, 332.0, anchor="nw", text="كلمة المرور", fill="#05646D", font=("Rakkas", 20 * -1))
        self.entry_image_2 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_2 = self.canvas.create_image(180.5, 381.5, image=self.entry_image_2)
        entry_2 = Entry(self,  bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0)
        entry_2.place(x=53.0, y=363.0, width=255.0, height=35.0)
        self.button_image_1 = PhotoImage(file=relative_to_assets("Enter.png"))
        button_1 = Button(self, image=self.button_image_1, text='Enter', bg="#F3FEFC", borderwidth=0, highlightthickness=0, command=lambda: user_existance(), relief="flat")
        button_1.place( x=111.0, y=575.0, width=150.0, height=66.0)

        def user_existance():
            print(entry_1.get())
            print(entry_2.get())
            controller.show_frame(home_Page)


class home_Page(Frame):
    def __init__(self, parent, controller):
        Frame.__init__(self, parent)
        self.canvas = Canvas(self,bg="#FFFFFF", height=800, width=360, bd=0, highlightthickness=0, relief="ridge")
        self.image_image_10 = PhotoImage(file=relative_to_assets("background.png"))
        self.image_10 = self.canvas.create_image(180.0, 400.0,image=self.image_image_10)
        self.canvas.place(x=0, y=0)
        self.image_image_1 = PhotoImage(file=relative_to_assets("listen_my_hadith.png"))
        image_1 = Button(self, image=self.image_image_1, bg="#6CADA8", borderwidth=0, command=lambda: listen(), relief="flat")
        image_1.place(x=100.0, y=440.0,)
        self.button_image_1 = PhotoImage(file=relative_to_assets("search_butt.png"))
        button_1 = Button(self, image=self.button_image_1, text="ابحث", bg="#85B7AC", borderwidth=0, highlightthickness=0, command=lambda:  controller.show_frame(search_word), relief="flat")
        button_1.place(x=92.0, y=640.0, width=168.0, height=46.0)

        self.button_image_11 = PhotoImage(file=relative_to_assets("show_result.png"))
        button_11 = Button(self, image=self.button_image_11, text="ابحث", bg="#66ABA7", borderwidth=0,
                          highlightthickness=0, command=lambda: controller.show_frame(record_Result), relief="flat")
        button_11.place(x=92.0, y=370.0, width=168.0, height=46.0)

        self.image_image_2 = PhotoImage(file=relative_to_assets("record_hadith.png"))
        image_2 = Button(self, image=self.image_image_2, bg="#5DA8A6",  borderwidth=0, command=lambda: record_Hadith(), relief="flat")
        image_2.place( x=100.0, y=170.0)
        self.image_image_3 = PhotoImage(file=relative_to_assets("navigate_bar.png"))
        self.image_3 = self.canvas.create_image(689.2319946289062, 762.0, image=self.image_image_3)
        self.image_image_4 = PhotoImage(file=relative_to_assets("favurit.png"))
        button = Button(self, image=self.image_image_4, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                        command=lambda:  controller.show_frame(my_Favurit_List), relief="flat")
        button.place(x = 210.0,y = 735.0)
        self.image_image_5 = PhotoImage(file=relative_to_assets("profile.png"))
        button_0 = Button(self, image=self.image_image_5, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                        command=lambda: controller.show_frame(profile), relief="flat")
        button_0.place(x=116.0, y=737.0)
        self.image_image_6 = PhotoImage(file=relative_to_assets("home_Page.png"))
        button_0 = Button(self, image=self.image_image_6, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(home_Page), relief="flat")
        button_0.place(x=27.0, y=737.0)
        self.image_image_7 = PhotoImage(file=relative_to_assets("top_image.png"))
        self.image_7 = self.canvas.create_image(179.0, 45.0, image=self.image_image_7)
        self.canvas.create_text(140.0, 330.0, anchor="nw", text="تسجيل الحديث", fill="#FFFFFF", font=("Rakkas", 20 * -1))
        self.canvas.create_text(100.0, 118.0, anchor="nw", text="البحث عن حديث", fill="#FFFFFF", font=("Rakkas", 32 * -1))
        self.canvas.create_text(120.0, 600.0, anchor="nw", text="سماع تسجيل الحديث", fill="#FFFFFF", font=("Rakkas", 20 * -1))
        self.canvas.create_text(30.0, 773.0, anchor="nw", text="بحث", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(290.0, 773.0, anchor="nw", text="خروج", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(209.0, 775.0, anchor="nw", text="المفضلة", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(108.0, 773.0,anchor="nw",text="الحساب",fill="#227A70",font=("Rakkas", 20 * -1))
        self.image_image_8 = PhotoImage(file=relative_to_assets("exit_1.png"))
        self.image_8 = self.canvas.create_image(310.0, 755.0, image=self.image_image_8)
        self.image_image_9 = PhotoImage(file=relative_to_assets("exit_2.png"))
        button_1 = Button(self, image=self.image_image_9, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(start_log_in), relief="flat")
        button_1.place(x=288.0, y=748.0)

        def record_Hadith():
            r = sr.Recognizer()
            with sr.Microphone() as source:
                print("wait please......calibrating background noise..")
                r.adjust_for_ambient_noise(source, duration=2)
                print("Say something!")
                audio = r.listen(source)
                # save user audio
                with open('record.mp3', 'wb') as f:
                    f.write(audio.get_wav_data())

            try:
                text_of_voice = r.recognize_google(audio, language="ar-AR")
                print("You said: " + text_of_voice)
                # extract the keywords
                tokens = nltk.word_tokenize(text_of_voice)
                filteredSentences = []
                from nltk.corpus import stopwords
                stopWords = set(stopwords.words('arabic'))
                for w in tokens:
                    if w not in stopWords:
                        filteredSentences.append(w)

                print(tokens)
                print(filteredSentences)


                data = pd.read_excel("KeyWordsDataset.xlsx")
                cols = data.columns
                print(cols)
                df = pd.read_csv(r"arabic-stop-words-master/list.txt", )
                df.columns = ["stopWords"]
                keyWords = data['KeyWords']
                ids = data['hadith-id']

                def noramlize(text):
                    text = re.sub(r"[إأٱآا]", "ا", text)
                    text = re.sub(r"ى", "ي", text)
                    text = re.sub(r"ؤ", "ء", text)
                    text = re.sub(r"ئ", "ء", text)
                    text = re.sub(r'[^ا-ي ]', "", text)

                    noise = re.compile(""" ّ    | # Tashdid
                                         َ    | # Fatha
                                         ً    | # Tanwin Fath
                                         ُ    | # Damma
                                         ٌ    | # Tanwin Damm
                                         ِ    | # Kasra
                                         ٍ    | # Tanwin Kasr
                                         ْ    | # Sukun
                                         ـ     # Tatwil/Kashida
                                     """, re.VERBOSE)
                    text = re.sub(noise, '', text)
                    return text

                extraList = ["رسول", 'الله', "صلى", "عليه", "وسلم", "أن", "يقول", "سلم", "قال", "النَّبِيَّ", "من",
                             "إلى", "عن", "على", "في", "و", "صلي", "النبي", "فقولوا", "رضي"]
                extraStopWords = pd.DataFrame(extraList, columns=['stopWords'])
                noramlizedStopWords = []
                for t in df["stopWords"]:
                    noramlizedStopWords.append(noramlize(t))
                for i in range(len(extraList)):
                    noramlizedStopWords.append(extraList[i])

                def stopWordRmove(text, stop_words):
                    needed_words = []
                    words = nt.word_tokenize(text)
                    print("Words", words)
                    for w in words:
                        if w not in (stop_words):
                            needed_words.append(w)
                    filtered_sentence = " ".join(needed_words)
                    return filtered_sentence

                def getHadith(query):
                    normQuery = noramlize(query)
                    processedQuery = stopWordRmove(normQuery, noramlizedStopWords)
                    terms = processedQuery.split(" ")
                    idsList = []
                    for index, t in enumerate(data['KeyWords']):
                        for ind, term in enumerate(terms):
                            if term in t.split(" "):
                                idsList.append(index + 1)
                    idsList = set(idsList)
                    # Load original data
                    orgData = pd.read_excel("DataSet_Update.xlsx")
                    textOFhadith = []
                    for i in idsList:
                        textOFhadith.append(orgData.loc[orgData['hadith-id'] == i, 'full-hadith_text'].iloc[0])
                    return textOFhadith

                query = input("get query : ")
                Hadith_list = getHadith(query)
                for i in Hadith_list:
                    print(i)

            except sr.UnknownValueError:
                print("Google Speech Recognition could not understand audio")
            except sr.RequestError as e:
                print("Could not request results from Google Speech Recognition service; {0}".format(e))

        def listen():
            # make user can listen to his record
            listen_record = 'record.mp3'
            wave_obj = sa.WaveObject.from_wave_file(listen_record)
            play_obj = wave_obj.play()
            play_obj.wait_done()
            # playsound('record.mp3')
            # os.remove('record.mp3')
'''
        def search_word():
            
            self.image_image_2 = PhotoImage(file=relative_to_assets("white_back.png"))
            self.image_2 = self.canvas.create_image(181.0, 426.0, image=self.image_image_2)
            self.image_image_3 = PhotoImage(file=relative_to_assets("back_arrow.png"))
            button11 = Button(self, image=self.image_image_3, borderwidth=0, highlightthickness=0, bg="#49A0A2",
                            command=lambda: controller.show_frame(home_Page), relief="flat")
            button11.place(x=20.0, y=15.0)

            data = pd.read_excel(r'DataSet_Update.xlsx')
            df = pd.DataFrame(data, index=[5], columns=['topic', 'full-hadith_text'])
            print(df)
            self.canvas.create_text(218.0, 196.0, anchor="nw", text=" "+df , fill="#05646D",
                                    font=("Inter", 20 * -1))
'''

class search_word(Frame):
    def __init__(self, parent, controller):
        Frame.__init__(self, parent)
        self.canvas = Canvas(self, bg="#FFFFFF", height=800, width=360,bd=0, highlightthickness=0, relief="ridge")
        self.canvas.place(x=0, y=0)
        self.image_image_1 = PhotoImage(file=relative_to_assets("background.png"))
        self.image_1 = self.canvas.create_image(180.0, 400.0, image=self.image_image_1)
        self.image_image_2 = PhotoImage(file=relative_to_assets("top_image.png"))
        self.image_2 = self.canvas.create_image(179.0, 45.0, image=self.image_image_2)
        self.image_image_3 = PhotoImage(file=relative_to_assets("white_back.png"))
        self.image_3 = self.canvas.create_image(179.0, 367.0, image=self.image_image_3)
        entry_1 = Entry(self,bd=0, bg="#D9D9D9", fg="#000716", highlightthickness=0, justify=RIGHT)
        entry_1.place(x=69.0, y=83.0, width=231.0, height=35.0)

        self.image_image_444 = PhotoImage(file=relative_to_assets("serch_icon.png"))
        button = Button(self, image=self.image_image_444, borderwidth=0, highlightthickness=0, bg="#F3FEFC",
                        command=lambda: show_result(), relief="flat")
        button.place(x=21.0, y=83.0)


        def show_result():
            data = pd.read_excel("KeyWordsDataset.xlsx")
            cols = data.columns
            print(cols)
            df = pd.read_csv(
                r"C:/Users/ab00e/Desktop/tkprojict/build/arabic-stop-words-master/arabic-stop-words-master/list.txt", )
            df.columns = ["stopWords"]

            keyWords = data['KeyWords']
            ids = data['hadith-id']

            import re
            def noramlize(text):
                text = re.sub(r"[إأٱآا]", "ا", text)
                text = re.sub(r"ى", "ي", text)
                text = re.sub(r"ؤ", "ء", text)
                text = re.sub(r"ئ", "ء", text)
                text = re.sub(r'[^ا-ي ]', "", text)

                noise = re.compile(""" ّ    | # Tashdid
                                            َ    | # Fatha
                                            ً    | # Tanwin Fath
                                            ُ    | # Damma
                                            ٌ    | # Tanwin Damm
                                            ِ    | # Kasra
                                            ٍ    | # Tanwin Kasr
                                            ْ    | # Sukun
                                            ـ     # Tatwil/Kashida
                                        """, re.VERBOSE)
                text = re.sub(noise, '', text)
                return text

            extraList = ["رسول", 'الله', "صلى", "عليه", "وسلم", "أن", "يقول", "سلم", "قال", "النَّبِيَّ", "من", "إلى",
                         "عن",
                         "على", "في", "و", "صلي", "النبي", "فقولوا", "رضي"]
            extraStopWords = pd.DataFrame(extraList, columns=['stopWords'])
            noramlizedStopWords = []
            for t in df["stopWords"]:
                noramlizedStopWords.append(noramlize(t))
            for i in range(len(extraList)):
                noramlizedStopWords.append(extraList[i])
            noramlizedStopWords

            import nltk
            nltk.download('punkt')

            import nltk.tokenize as nt
            def stopWordRmove(text, stop_words):
                needed_words = []
                words = nt.word_tokenize(text)
                print("Words", words)
                for w in words:
                    if w not in (stop_words):
                        needed_words.append(w)
                filtered_sentence = " ".join(needed_words)
                return filtered_sentence

            query = input(entry_1.get())
            normQuery = noramlize(query)
            processedQuery = stopWordRmove(normQuery, noramlizedStopWords)
            print(processedQuery)
            terms = processedQuery.split(" ")
            idsList = []
            for index, t in enumerate(data['KeyWords']):
                for ind, term in enumerate(terms):
                    if term in t.split(" "):
                        idsList.append(index + 1)

                print(idsList)

        self.canvas.create_text(64.0, 150.0, width=250, anchor="nw", text="", fill="#000000", font=("Inter", 20 * -1))
        self.image_image_4 = PhotoImage(file=relative_to_assets("favurit.png"))
        self.image_4 = self.canvas.create_image(273.0, 150.0, image=self.image_image_4)
        self.image_image_5 = PhotoImage(file=relative_to_assets("listening.png"))
        self.image_5 = self.canvas.create_image(275.0, 107.0, image=self.image_image_5)

        self.image_image_6 = PhotoImage(file=relative_to_assets("navigate_bar.png"))
        self.image_6 = self.canvas.create_image(179.0, 754.0, image=self.image_image_6)
        self.image_image_33 = PhotoImage(file=relative_to_assets("navigate_bar.png"))
        self.image_3 = self.canvas.create_image(689.2319946289062, 762.0, image=self.image_image_33)
        self.image_image_44 = PhotoImage(file=relative_to_assets("favurit.png"))
        button = Button(self, image=self.image_image_44, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                        command=lambda: controller.show_frame(my_Favurit_List), relief="flat")
        button.place(x=210.0, y=735.0)
        self.image_image_55 = PhotoImage(file=relative_to_assets("profile.png"))
        button_0 = Button(self, image=self.image_image_55, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(profile), relief="flat")
        button_0.place(x=116.0, y=737.0)
        self.image_image_6 = PhotoImage(file=relative_to_assets("home_Page.png"))
        button_0 = Button(self, image=self.image_image_6, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda:controller.show_frame(home_Page), relief="flat")
        button_0.place(x=27.0, y=737.0)
        self.canvas.create_text(30.0, 773.0, anchor="nw", text="بحث", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(290.0, 773.0, anchor="nw", text="خروج", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(209.0, 775.0, anchor="nw", text="المفضلة", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(108.0, 773.0, anchor="nw", text="الحساب", fill="#227A70", font=("Rakkas", 20 * -1))
        self.image_image_8 = PhotoImage(file=relative_to_assets("exit_1.png"))
        self.image_8 = self.canvas.create_image(310.0, 755.0, image=self.image_image_8)
        self.image_image_9 = PhotoImage(file=relative_to_assets("exit_2.png"))
        button_1 = Button(self, image=self.image_image_9, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(start_log_in), relief="flat")
        button_1.place(x=288.0, y=748.0)

class record_Result(Frame):
    def __init__(self, parent, controller):
        Frame.__init__(self, parent)
        self.canvas = Canvas(self, bg="#FFFFFF", height=800, width=360, bd=0, highlightthickness=0, relief="ridge")
        self.canvas.place(x=0, y=0)
        self.image_image_1 = PhotoImage(file=relative_to_assets("background.png"))
        self.image_1 = self.canvas.create_image(180.0, 400.0, image=self.image_image_1)
        self.image_image_2 = PhotoImage(file=relative_to_assets("top_image.png"))
        self.image_2 = self.canvas.create_image(179.0, 45.0, image=self.image_image_2)
        self.image_image_3 = PhotoImage(file=relative_to_assets("white_back.png"))
        self.image_3 = self.canvas.create_image(179.0, 367.0, image=self.image_image_3)
        self.canvas.create_text(64.0, 150.0, width=250, anchor="nw",
                                text="result",
                                fill="#000000", font=("Inter", 20 * -1))
        self.image_image_4 = PhotoImage(file=relative_to_assets("favurit.png"))
        self.image_4 = self.canvas.create_image(273.0, 150.0, image=self.image_image_4)
        self.image_image_5 = PhotoImage(file=relative_to_assets("listening.png"))
        self.image_5 = self.canvas.create_image(275.0, 107.0, image=self.image_image_5)

        self.image_image_6 = PhotoImage(file=relative_to_assets("navigate_bar.png"))
        self.image_6 = self.canvas.create_image(179.0, 754.0, image=self.image_image_6)
        self.image_image_33 = PhotoImage(file=relative_to_assets("navigate_bar.png"))
        self.image_3 = self.canvas.create_image(689.2319946289062, 762.0, image=self.image_image_33)
        self.image_image_44 = PhotoImage(file=relative_to_assets("favurit.png"))
        button = Button(self, image=self.image_image_44, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                        command=lambda:  controller.show_frame(my_Favurit_List), relief="flat")
        button.place(x=210.0, y=735.0)
        self.image_image_55 = PhotoImage(file=relative_to_assets("profile.png"))
        button_0 = Button(self, image=self.image_image_55, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(profile), relief="flat")
        button_0.place(x=116.0, y=737.0)
        self.image_image_6 = PhotoImage(file=relative_to_assets("home_Page.png"))
        button_0 = Button(self, image=self.image_image_6, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(home_Page), relief="flat")
        button_0.place(x=27.0, y=737.0)
        self.canvas.create_text(30.0, 773.0, anchor="nw", text="بحث", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(290.0, 773.0, anchor="nw", text="خروج", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(209.0, 775.0, anchor="nw", text="المفضلة", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(108.0, 773.0, anchor="nw", text="الحساب", fill="#227A70", font=("Rakkas", 20 * -1))
        self.image_image_8 = PhotoImage(file=relative_to_assets("exit_1.png"))
        self.image_8 = self.canvas.create_image(310.0, 755.0, image=self.image_image_8)
        self.image_image_9 = PhotoImage(file=relative_to_assets("exit_2.png"))
        button_1 = Button(self, image=self.image_image_9, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(start_log_in), relief="flat")
        button_1.place(x=288.0, y=748.0)


class profile(Frame):
    def __init__(self, parent, controller):
        Frame.__init__(self, parent)
        self.canvas = Canvas(self, bg="#FFFFFF", height=800, width=360, bd=0, highlightthickness=0, relief="ridge")
        self.canvas.place(x=0, y=0)
        self.image_image_1 = PhotoImage(file=relative_to_assets("background.png"))
        self.image_1 = self.canvas.create_image(180.0, 400.0, image=self.image_image_1)
        self.canvas.create_text(156.0, 523.0, anchor="nw", text="العمر", fill="#FFFFFF", font=("Rakkas", 20 * -1))
        self.canvas.create_text(139.0, 476.0, anchor="nw", text="التخصص", fill="#FFFFFF", font=("Rakkas", 20 * -1))
        self.canvas.create_text(146.0, 429.0, anchor="nw", text="الوظيفة", fill="#FFFFFF", font=("Rakkas", 20 * -1))
        self.canvas.create_text(139.0, 381.0, anchor="nw", text="رقم الجوال", fill="#FFFFFF", font=("Rakkas", 20 * -1))
        self.image_image_2 = PhotoImage(file=relative_to_assets("top_image.png"))
        self.image_2 = self.canvas.create_image(179.0, 45.0,image=self.image_image_2)
        self.canvas.create_text(130.0, 286.0, anchor="nw", text="اسم المستخدم", fill="#FFFFFF", font=("Rakkas", 20 * -1))
        self.canvas.create_text(116.0, 333.0, anchor="nw", text="البريد الالكتروني", fill="#FFFFFF", font=("Rakkas", 20 * -1))
        self.image_image_6 = PhotoImage(file=relative_to_assets("navigate_bar.png"))
        self.image_6 = self.canvas.create_image(179.0, 754.0, image=self.image_image_6)
        self.image_image_33 = PhotoImage(file=relative_to_assets("navigate_bar.png"))
        self.image_3 = self.canvas.create_image(689.2319946289062, 762.0, image=self.image_image_33)
        self.image_image_44 = PhotoImage(file=relative_to_assets("favurit.png"))
        button = Button(self, image=self.image_image_44, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                        command=lambda: controller.show_frame(my_Favurit_List), relief="flat")
        button.place(x=210.0, y=735.0)
        self.image_image_55 = PhotoImage(file=relative_to_assets("profile.png"))
        button_00 = Button(self, image=self.image_image_55, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(profile), relief="flat")
        button_00.place(x=116.0, y=737.0)
        self.image_image_6 = PhotoImage(file=relative_to_assets("home_Page.png"))
        button_0 = Button(self, image=self.image_image_6, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(home_Page), relief="flat")
        button_0.place(x=27.0, y=737.0)
        self.canvas.create_text(30.0, 773.0, anchor="nw", text="بحث", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(290.0, 773.0, anchor="nw", text="خروج", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(209.0, 775.0, anchor="nw", text="المفضلة", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(108.0, 773.0, anchor="nw", text="الحساب", fill="#227A70", font=("Rakkas", 20 * -1))
        self.image_image_8 = PhotoImage(file=relative_to_assets("exit_1.png"))
        self.image_8 = self.canvas.create_image(310.0, 755.0, image=self.image_image_8)
        self.image_image_9 = PhotoImage(file=relative_to_assets("exit_2.png"))
        button_1 = Button(self, image=self.image_image_9, borderwidth=0, highlightthickness=0, bg="#85B7AC",
                          command=lambda: controller.show_frame(start_log_in), relief="flat")
        button_1.place(x=288.0, y=748.0)
        self.image_image_88 = PhotoImage(file=relative_to_assets("edit_Profile.png"))
        self.image_8 = self.canvas.create_image( 326.0, 126.0, image=self.image_image_88)
        self.image_image_99 = PhotoImage(file=relative_to_assets("my_Profile.png"))
        self.image_9 = self.canvas.create_image(176.0, 214.0, image=self.image_image_99)
        self.image_image_10 = PhotoImage(file=relative_to_assets("profile.png"))
        self.image_10 = self.canvas.create_image(135.0, 753.0, image=self.image_image_10)
        self.canvas.create_text(298.0, 145.0, anchor="nw", text="تعديل", fill="#FFFFFF", font=("Rakkas", 20 * -1))

class my_Favurit_List(Frame):
    def __init__(self, parent, controller):
        Frame.__init__(self, parent)
        self.canvas = Canvas(self, bg="#FFFFFF", height=800, width=360, bd=0, highlightthickness=0, relief="ridge")
        self.canvas.place(x=0, y=0)
        self.image_image_1 = PhotoImage(file=relative_to_assets("background.png"))
        self.image_1 = self.canvas.create_image(180.0, 400.0, image=self.image_image_1)
        self.image_image_2 = PhotoImage(file=relative_to_assets("top_image.png"))
        self.image_2 = self.canvas.create_image(179.0, 45.0, image=self.image_image_2)
        self.canvas.create_text(140.0, 130.0, anchor="nw", text="المفضلة", fill="#FFFFFF", font=("Rakkas", 32 * -1))
        self.image_image_3 = PhotoImage(file=relative_to_assets("favurit.png"))
        self.image_3 = self.canvas.create_image(74.0, 395.0, image=self.image_image_3)

        self.entry_image_1 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_1 = self.canvas.create_image(178.5, 313.0, image=self.entry_image_1)


        self.image_image_4 = PhotoImage(file=relative_to_assets("listening.png"))
        self.image_4 = self.canvas.create_image(293.0, 403.0, image=self.image_image_4)
        self.canvas.create_text(70.0, 183.0, anchor="nw", text="Hadith Sharif", fill="#000000", font=("Rakkas", 13 * -1))
        self.entry_image_2 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_2 = self.canvas.create_image(178.5, 496.5, image=self.entry_image_2)


        self.image_image_5 = PhotoImage(file=relative_to_assets("listening.png"))
        self.image_5 = self.canvas.create_image( 295.0, 547.0, image=self.image_image_5)
        self.image_image_6 = PhotoImage(file=relative_to_assets("delet.png"))
        self.image_6 = self.canvas.create_image(63.0, 542.0, image=self.image_image_6)
        self.canvas.create_text(75.0, 366.0, anchor="nw", text="hadith ", fill="#000000", font=("Rakkas", 13 * -1))
        self.entry_image_3 = PhotoImage(file=relative_to_assets("entry.png"))
        self.entry_bg_3 = self.canvas.create_image(178.5, 621.5, image=self.entry_image_3)


        self.image_image_7 = PhotoImage(file=relative_to_assets("listening.png"))
        self.image_7 = self.canvas.create_image(291.0, 657.0, image=self.image_image_7)
        self.image_image_8 = PhotoImage(file=relative_to_assets("delet.png"))
        self.image_8 = self.canvas.create_image(63.0, 654.0, image=self.image_image_8)
        self.image_image_9 = PhotoImage(file=relative_to_assets("delet.png"))
        self.image_9 = self.canvas.create_image(63.0, 399.0, image=self.image_image_9)
        self.canvas.create_text(71.0, 490.0, anchor="nw", text=".hadith", fill="#000000", font=("Rakkas", 13 * -1))
        self.image_image_10 = PhotoImage(file=relative_to_assets("favurit.png"))
        self.image_10 = self.canvas.create_image(233.0, 754.0, image=self.image_image_10)
        self.image_image_11 = PhotoImage(file=relative_to_assets("profile.png"))
        self.image_11 = self.canvas.create_image(135.0, 753.0,image=self.image_image_11)
        self.image_image_12 = PhotoImage(file=relative_to_assets("home_Page.png"))
        self.image_12 = self.canvas.create_image(47.0, 753.0, image=self.image_image_12)
        self.canvas.create_text(28.0, 770.0, anchor="nw", text="بحث", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(293.0, 770.0, anchor="nw", text="خروج", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(202.0, 773.0, anchor="nw", text="المفضلة", fill="#227A70", font=("Rakkas", 20 * -1))
        self.canvas.create_text(106.0, 773.0, anchor="nw", text="الحساب", fill="#227A70", font=("Rakkas", 20 * -1))
        self.image_image_13 = PhotoImage(file=relative_to_assets("exit_1.png"))
        self.image_13 = self.canvas.create_image(310.0, 755.0,image=self.image_image_13)
        self.image_image_14 = PhotoImage(file=relative_to_assets("exit_2.png"))
        self.image_14 = self.canvas.create_image(305.0, 756.0, image=self.image_image_14)
        self.image_image_15 = PhotoImage(file=relative_to_assets("image_15.png"))
        self.image_15 = self.canvas.create_image(311.0, 756.0,image=self.image_image_15)


a = App()
a.resizable(False, False)
a.mainloop()